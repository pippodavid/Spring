<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.david.dao.IUserDao">
    <resultMap id="userMap" type="com.david.User">
        <!--主键对应的字段-->
        <id property="id" column="id"></id>
        <!--非主键对应的字段-->
        <result property="name" column="username"></result>
    </resultMap>
    <select id="findAll" resultType="com.david.User">
        select * from user;
    </select>

    <!--MyBatis使用ognl（对象图导航语言）获取数据
    parameterType指定了属性所属类，使用的时候直接写属性名就能获取了-->
    <insert id="saveUser" parameterType="com.david.User">
        <!--配置插入操作后，获取插入数据的Id
        keyProperty对应实体类属性，keyColume对应数据库表中的列名-->
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username, address, sex, birthday) values (#{name},#{address},#{sex},#{birthday});
    </insert>

    <update id="updateUser" parameterType="com.david.User">
        update user set username=#{name},address=#{address},sex=#{sex},birthday=#{birthday} where id=#{id};
    </update>

    <delete id="deleteUser" parameterType="Integer">
        delete from user where id=#{id};
    </delete>

    <select id="findById" parameterType="Integer" resultType="com.david.User">
        select * from user where id=#{id};
    </select>

    <!--这里使用resultMap做实体类属性数据库字段的映射-->
    <select id="findByName" parameterType="String" resultMap="userMap">
        select * from user where username like #{name};
        <!-- select * from user where username like '${%value%}'; -->
    </select>

    <select id="findTotal" resultType="Integer">
        select count(*) from user;
    </select>

    <select id="findByQryVo" parameterType="com.david.User" resultType="com.david.User">
        select * from user where username like #{user.name};
    </select>
</mapper>